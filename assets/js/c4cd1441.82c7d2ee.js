"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[43764],{603905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return c}});var a=n(202784);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),m=p(n),c=r,k=m["".concat(s,".").concat(c)]||m[c]||d[c]||i;return n?a.createElement(k,l(l({ref:t},u),{},{components:n})):a.createElement(k,l({ref:t},u))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var p=2;p<i;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},142185:function(e,t,n){n.r(t),n.d(t,{assets:function(){return f},contentTitle:function(){return c},default:function(){return b},frontMatter:function(){return m},metadata:function(){return k},toc:function(){return h}});var a=n(603905),r=Object.defineProperty,i=Object.defineProperties,l=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,u=(e,t,n)=>t in e?r(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,d=(e,t)=>{for(var n in t||(t={}))s.call(t,n)&&u(e,n,t[n]);if(o)for(var n of o(t))p.call(t,n)&&u(e,n,t[n]);return e};const m={id:"sketchpad",title:"Sketchpad",sidebar_label:"Sketchpad"},c=void 0,k={unversionedId:"sketchpad",id:"sketchpad",title:"Sketchpad",description:"A drawing sketchpad for note taking on lecture slides or empty pages.",source:"@site/docs/sketchpad.md",sourceDirName:".",slug:"/sketchpad",permalink:"/docs/sketchpad",draft:!1,editUrl:"https://github.com/isle-project/isle-editor/edit/master/docusaurus/website/docs/sketchpad.md",tags:[],version:"current",lastUpdatedBy:"Planeshifter",lastUpdatedAt:1633715852,formattedLastUpdatedAt:"10/8/2021",frontMatter:{id:"sketchpad",title:"Sketchpad",sidebar_label:"Sketchpad"},sidebar:"docs",previous:{title:"Text Editor",permalink:"/docs/text-editor"},next:{title:"Lesson Submit",permalink:"/docs/lesson-submit"}},f={},h=[{value:"Options",id:"options",level:2},{value:"Examples",id:"examples",level:2}],N={toc:h};function b(e){var t,n=e,{components:r}=n,u=((e,t)=>{var n={};for(var a in e)s.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&o)for(var a of o(e))t.indexOf(a)<0&&p.call(e,a)&&(n[a]=e[a]);return n})(n,["components"]);return(0,a.kt)("wrapper",(t=d(d({},N),u),i(t,l({components:r,mdxType:"MDXLayout"}))),(0,a.kt)("p",null,"A drawing sketchpad for note taking on lecture slides or empty pages."),(0,a.kt)("h2",d({},{id:"options"}),"Options"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"autoSave")," | ",(0,a.kt)("inlineCode",{parentName:"li"},"boolean"),": controls whether the editor should save the current text to the local storage of the browser at a given time interval. Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"true"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"feedbackButtons")," | ",(0,a.kt)("inlineCode",{parentName:"li"},"boolean"),": controls whether to display feedback buttons on each slide. Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"false"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"intervalTime")," | ",(0,a.kt)("inlineCode",{parentName:"li"},"number"),": time between auto saves. Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"10000"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"hideInputButtons")," | ",(0,a.kt)("inlineCode",{parentName:"li"},"boolean"),": controls whether to hide drawing and text input buttons. Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"false"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"hideNavigationButtons")," | ",(0,a.kt)("inlineCode",{parentName:"li"},"boolean"),": controls whether to hide buttons for navigating between pages. Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"false"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"hideSaveButtons")," | ",(0,a.kt)("inlineCode",{parentName:"li"},"boolean"),": controls whether to hide the save buttons. Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"false"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"hideTransmitButtons")," | ",(0,a.kt)("inlineCode",{parentName:"li"},"boolean"),": controls whether to hide buttons for transmitting user actions. Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"false"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"brushSize")," | ",(0,a.kt)("inlineCode",{parentName:"li"},"number"),": size of the brush to paint with. Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"4"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"color")," | ",(0,a.kt)("inlineCode",{parentName:"li"},"string"),": color of the brush and texts. Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"'#444444'"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"canvasWidth")," | ",(0,a.kt)("inlineCode",{parentName:"li"},"number"),": width of the canvas element (in px). Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"1200"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"canvasHeight")," | ",(0,a.kt)("inlineCode",{parentName:"li"},"number"),": height of the canvas element (in px). Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"700"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"fullscreen")," | ",(0,a.kt)("inlineCode",{parentName:"li"},"boolean"),": controls whether to automatically resize the canvas to the width and height of the browser window. Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"false"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"fill")," | ",(0,a.kt)("inlineCode",{parentName:"li"},"string"),": if ",(0,a.kt)("inlineCode",{parentName:"li"},"horizontal"),", fill all available horizontal space when drawing a PDF; if ",(0,a.kt)("inlineCode",{parentName:"li"},"vertical"),", all vertical space is used to prevent y-axis overflow. Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"'vertical'"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"disabled")," | ",(0,a.kt)("inlineCode",{parentName:"li"},"boolean"),": whether to make the component read-only and forbid drawing on the sketchpad. Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"false"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"fontFamily")," | ",(0,a.kt)("inlineCode",{parentName:"li"},"string"),": font family. Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"'Arial'"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"fontSize")," | ",(0,a.kt)("inlineCode",{parentName:"li"},"number"),": font size. Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"24"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"nodes")," | ",(0,a.kt)("inlineCode",{parentName:"li"},"object"),": components to be rendered on top of specified slides; ",(0,a.kt)("inlineCode",{parentName:"li"},"keys")," should correspond to page numbers, ",(0,a.kt)("inlineCode",{parentName:"li"},"values")," to the components. Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"{}"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"noPages")," | ",(0,a.kt)("inlineCode",{parentName:"li"},"number"),": initial number of pages. Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"1"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"pdf")," | ",(0,a.kt)("inlineCode",{parentName:"li"},"string"),": link to PDF file for baked-in page backgrounds. Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"none"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"showTutorial")," | ",(0,a.kt)("inlineCode",{parentName:"li"},"boolean"),": show tutorial for the sketchpad on startup. Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"false"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"dynamicallyHideButtons")," | ",(0,a.kt)("inlineCode",{parentName:"li"},"boolean"),": controls whether to start hiding buttons when toolbar width is not sufficient (otherwise a new line will be started). Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"false"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"transmitOwner")," | ",(0,a.kt)("inlineCode",{parentName:"li"},"boolean"),": whether owner actions should be transmitted to other users in real-time. Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"true"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"groupMode")," | ",(0,a.kt)("inlineCode",{parentName:"li"},"boolean"),": controls whether all user's actions are transmitted to everyone else. Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"false"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"style")," | ",(0,a.kt)("inlineCode",{parentName:"li"},"object"),": CSS inline styles. Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"{}"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"onChange")," | ",(0,a.kt)("inlineCode",{parentName:"li"},"function"),": callback invoked whenever a new line element is drawn. Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"onChange() {}"),".")),(0,a.kt)("h2",d({},{id:"examples"}),"Examples"),(0,a.kt)("pre",null,(0,a.kt)("code",d({parentName:"pre"},{className:"language-jsx",metastring:"live",live:!0}),"<Sketchpad canvasWidth={750} />\n")))}b.isMDXComponent=!0}}]);