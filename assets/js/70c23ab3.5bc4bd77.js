"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[69703],{603905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var a=n(202784);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=s(n),m=r,f=d["".concat(p,".").concat(m)]||d[m]||c[m]||l;return n?a.createElement(f,i(i({ref:t},u),{},{components:n})):a.createElement(f,i({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=d;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var s=2;s<l;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},890152:function(e,t,n){n.r(t),n.d(t,{assets:function(){return k},contentTitle:function(){return m},default:function(){return h},frontMatter:function(){return d},metadata:function(){return f},toc:function(){return b}});var a=n(603905),r=Object.defineProperty,l=Object.defineProperties,i=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable,u=(e,t,n)=>t in e?r(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,c=(e,t)=>{for(var n in t||(t={}))p.call(t,n)&&u(e,n,t[n]);if(o)for(var n of o(t))s.call(t,n)&&u(e,n,t[n]);return e};const d={id:"data-table",title:"Data Table",sidebar_label:"Data Table"},m=void 0,f={unversionedId:"data-table",id:"data-table",title:"Data Table",description:"A component rendering data in a tabular display. Built on top of react-table.",source:"@site/docs/data-table.md",sourceDirName:".",slug:"/data-table",permalink:"/docs/data-table",draft:!1,editUrl:"https://github.com/isle-project/isle-editor/edit/master/docusaurus/website/docs/data-table.md",tags:[],version:"current",lastUpdatedBy:"Planeshifter",lastUpdatedAt:1614613459,formattedLastUpdatedAt:"Mar 1, 2021",frontMatter:{id:"data-table",title:"Data Table",sidebar_label:"Data Table"},sidebar:"docs",previous:{title:"Data Explorer",permalink:"/docs/data-explorer"},next:{title:"Feedback Buttons",permalink:"/docs/feedback"}},k={},b=[{value:"Options",id:"options",level:2},{value:"Examples",id:"examples",level:2}],N={toc:b};function h(e){var t,n=e,{components:r}=n,u=((e,t)=>{var n={};for(var a in e)p.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&o)for(var a of o(e))t.indexOf(a)<0&&s.call(e,a)&&(n[a]=e[a]);return n})(n,["components"]);return(0,a.kt)("wrapper",(t=c(c({},N),u),l(t,i({components:r,mdxType:"MDXLayout"}))),(0,a.kt)("p",null,"A component rendering data in a tabular display. Built on top of ",(0,a.kt)("a",c({parentName:"p"},{href:"https://react-table.js.org/"}),"react-table"),"."),(0,a.kt)("h2",c({},{id:"options"}),"Options"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"data")," | ",(0,a.kt)("inlineCode",{parentName:"li"},"(array|object) (required)"),": A data object or array to be viewed. If it is an object, the keys correspond to column values while an array will expect an array of objects with a named field corresponding to each column. Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"none"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"dataInfo")," | ",(0,a.kt)("inlineCode",{parentName:"li"},"object"),": object with ",(0,a.kt)("inlineCode",{parentName:"li"},"info")," string array describing the data set, the ",(0,a.kt)("inlineCode",{parentName:"li"},"name")," of the dataset, an ",(0,a.kt)("inlineCode",{parentName:"li"},"object")," of ",(0,a.kt)("inlineCode",{parentName:"li"},"variables")," with keys corresponding to variable names and values to variable descriptions, an a ",(0,a.kt)("inlineCode",{parentName:"li"},"showOnStartup")," boolean controlling whether to display the info modal on startup. Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"{\n  'info': [],\n  'name': '',\n  'variables': null,\n  'showOnStartup': false\n}"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"deletable")," | ",(0,a.kt)("inlineCode",{parentName:"li"},"boolean"),": controls whether columns for which no ",(0,a.kt)("inlineCode",{parentName:"li"},"info")," exist have a button which when clicked calls the ",(0,a.kt)("inlineCode",{parentName:"li"},"onColumnDelete")," callback function. Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"false"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"undeletableVars")," | ",(0,a.kt)("inlineCode",{parentName:"li"},"array<string>"),": array of variable names of columns which may not be deleted. Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"[]"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"filterable")," | ",(0,a.kt)("inlineCode",{parentName:"li"},"boolean"),": controls whether columns are filterable. Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"true"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"editable")," | ",(0,a.kt)("inlineCode",{parentName:"li"},"array"),": array of names for columns that shall be editable. Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"[]"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"getTrProps")," | ",(0,a.kt)("inlineCode",{parentName:"li"},"function"),": callback function executed for each row to customize its styling (passed table state, row info,\ncolumn, and the table instance). Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"none"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"onColumnDrag")," | ",(0,a.kt)("inlineCode",{parentName:"li"},"function"),": function invoked when a column has been dragged to a different position. Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"onColumnDrag() {}"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"onColumnDelete")," | ",(0,a.kt)("inlineCode",{parentName:"li"},"function"),": function invoked with the name of a column when the respective delete button for a column is clicked. Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"onColumnDelete() {}"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"onColumnNameChange")," | ",(0,a.kt)("inlineCode",{parentName:"li"},"function"),": function invoked when a column has been renamed (called with the old name as first and new name as second argument). Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"onColumnNameChange() {}"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"onClickRemove")," | ",(0,a.kt)("inlineCode",{parentName:"li"},"function"),": function specifying an action to take for rows removed from the data (defaults to an empty function). Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"onClickRemove() {}"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"onEdit")," | ",(0,a.kt)("inlineCode",{parentName:"li"},"function"),": function invoked with the updated data set after the value of a cell was changed by the user (only applies when table is ",(0,a.kt)("inlineCode",{parentName:"li"},"editable"),"). Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"onEdit() {}"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"onTutorialCompletion")," | ",(0,a.kt)("inlineCode",{parentName:"li"},"function"),": function invoked when user has completed the data table tutorial. Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"onTutorialCompletion() {}"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"filters")," | ",(0,a.kt)("inlineCode",{parentName:"li"},"array"),": array of filters. Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"[]"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"onFilteredChange")," | ",(0,a.kt)("inlineCode",{parentName:"li"},"function"),": function invoked with the current filters after data has been filtered by user. Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"onFilteredChange() {}"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"showRemove")," | ",(0,a.kt)("inlineCode",{parentName:"li"},"boolean"),": indicates whether to display checkboxes for rows to be removed. Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"false"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"showIdColumn")," | ",(0,a.kt)("inlineCode",{parentName:"li"},"boolean"),": controls whether to show an ID column. Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"true"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"disableDownload")," | ",(0,a.kt)("inlineCode",{parentName:"li"},"boolean"),": whether to hide the button to download the data as a CSV or JSON file. Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"false"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"className")," | ",(0,a.kt)("inlineCode",{parentName:"li"},"string"),": class name. Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"''"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"style")," | ",(0,a.kt)("inlineCode",{parentName:"li"},"object"),": An object allowing for custom css styling. Defaults to an empty object. Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"{}"),".")),(0,a.kt)("h2",c({},{id:"examples"}),"Examples"),(0,a.kt)("pre",null,(0,a.kt)("code",c({parentName:"pre"},{className:"language-jsx",metastring:"live",live:!0}),"<DataTable\n    showRemove\n    onClickRemove={( data ) => { console.log(data); }}\n    data={{ \n        firstName: [ 'Hans', 'Lotti', 'Fritz' ], \n        lastName: [ 'Bauer', 'M\xfcller', 'Schultz' ],\n        age: [ 37, 55, 62 ]\n    }}\n    style={{ width: 600 }}\n/>\n")))}h.isMDXComponent=!0}}]);