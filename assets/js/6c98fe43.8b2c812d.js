"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[1002],{603905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return s}});var l=n(202784);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,l)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,l,a=function(e,t){if(null==e)return{};var n,l,a={},i=Object.keys(e);for(l=0;l<i.length;l++)n=i[l],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(l=0;l<i.length;l++)n=i[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=l.createContext({}),c=function(e){var t=l.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},u=function(e){var t=c(e.components);return l.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},m=l.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),m=c(n),s=a,k=m["".concat(p,".").concat(s)]||m[s]||d[s]||i;return n?l.createElement(k,r(r({ref:t},u),{},{components:n})):l.createElement(k,r({ref:t},u))}));function s(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,r=new Array(i);r[0]=m;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:a,r[1]=o;for(var c=2;c<i;c++)r[c]=n[c];return l.createElement.apply(null,r)}return l.createElement.apply(null,n)}m.displayName="MDXCreateElement"},626387:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return p},metadata:function(){return c},toc:function(){return u},default:function(){return m}});var l=n(487462),a=n(263366),i=(n(202784),n(603905)),r=["components"],o={id:"plotly",title:"Plotly",sidebar_label:"Plotly"},p=void 0,c={unversionedId:"plotly",id:"plotly",isDocsHomePage:!1,title:"Plotly",description:"Plotly visualization.",source:"@site/docs/plotly.md",sourceDirName:".",slug:"/plotly",permalink:"/docs/plotly",editUrl:"https://github.com/isle-project/isle-editor/edit/master/docusaurus/website/docs/plotly.md",tags:[],version:"current",lastUpdatedBy:"Planeshifter",lastUpdatedAt:1614610168,formattedLastUpdatedAt:"3/1/2021",frontMatter:{id:"plotly",title:"Plotly",sidebar_label:"Plotly"},sidebar:"docs",previous:{title:"Typewriter",permalink:"/docs/typewriter"},next:{title:"Bar Chart",permalink:"/docs/plots/barchart"}},u=[{value:"Options",id:"options",children:[],level:2},{value:"Examples",id:"examples",children:[],level:2}],d={toc:u};function m(e){var t=e.components,n=(0,a.Z)(e,r);return(0,i.kt)("wrapper",(0,l.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://plotly.com/javascript/"},"Plotly")," visualization."),(0,i.kt)("h2",{id:"options"},"Options"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"data")," | ",(0,i.kt)("inlineCode",{parentName:"li"},"array (required)"),": data array. Default: ",(0,i.kt)("inlineCode",{parentName:"li"},"none"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"draggable")," | ",(0,i.kt)("inlineCode",{parentName:"li"},"boolean"),": controls whether the plot should be draggable. Default: ",(0,i.kt)("inlineCode",{parentName:"li"},"false"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"editable")," | ",(0,i.kt)("inlineCode",{parentName:"li"},"boolean"),": controls whether labels of the created plot are editable. Default: ",(0,i.kt)("inlineCode",{parentName:"li"},"false"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"id")," | ",(0,i.kt)("inlineCode",{parentName:"li"},"string"),": component identifier. Default: ",(0,i.kt)("inlineCode",{parentName:"li"},"none"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"layout")," | ",(0,i.kt)("inlineCode",{parentName:"li"},"object"),": Plotly layout object. Default: ",(0,i.kt)("inlineCode",{parentName:"li"},"{}"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"config")," | ",(0,i.kt)("inlineCode",{parentName:"li"},"object"),": Plotly configuration options (see: ",(0,i.kt)("a",{parentName:"li",href:"https://plotly.com/javascript/configuration-options/"},"https://plotly.com/javascript/configuration-options/"),"). Default: ",(0,i.kt)("inlineCode",{parentName:"li"},"{}"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"legendButtons")," | ",(0,i.kt)("inlineCode",{parentName:"li"},"boolean"),": controls whether to display buttons for changing the legend. Default: ",(0,i.kt)("inlineCode",{parentName:"li"},"true"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"meta")," | ",(0,i.kt)("inlineCode",{parentName:"li"},"object"),": plot meta-information. Default: ",(0,i.kt)("inlineCode",{parentName:"li"},"none"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"revision")," | ",(0,i.kt)("inlineCode",{parentName:"li"},"number"),": when provided, causes the plot to update when the revision value is incremented. Default: ",(0,i.kt)("inlineCode",{parentName:"li"},"none"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"style")," | ",(0,i.kt)("inlineCode",{parentName:"li"},"object"),": CSS inline styles. Default: ",(0,i.kt)("inlineCode",{parentName:"li"},"{}"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"onAfterPlot")," | ",(0,i.kt)("inlineCode",{parentName:"li"},"function"),": callback function invoked each time a chart is plotted. Default: ",(0,i.kt)("inlineCode",{parentName:"li"},"onAfterPlot() {}"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"onClick")," | ",(0,i.kt)("inlineCode",{parentName:"li"},"function"),": callback function invoked when any element is clicked. Default: ",(0,i.kt)("inlineCode",{parentName:"li"},"onClick() {}"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"onInitialized")," | ",(0,i.kt)("inlineCode",{parentName:"li"},"function"),": callback invoked once plot is initialized; called with figure (object with three keys corresponding to input props: ",(0,i.kt)("inlineCode",{parentName:"li"},"data"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"layout"),", and ",(0,i.kt)("inlineCode",{parentName:"li"},"frames"),") and the DOM node ",(0,i.kt)("inlineCode",{parentName:"li"},"graphDiv"),". Default: ",(0,i.kt)("inlineCode",{parentName:"li"},"onInitialized() {}"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"onLegendClick")," | ",(0,i.kt)("inlineCode",{parentName:"li"},"function"),": callback function invoked when legend item is clicked. Default: ",(0,i.kt)("inlineCode",{parentName:"li"},"onLegendClick() {}"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"onLegendDoubleClick")," | ",(0,i.kt)("inlineCode",{parentName:"li"},"function"),": callback function invoked when legend item is double-clicked. Default: ",(0,i.kt)("inlineCode",{parentName:"li"},"onLegendDoubleClick() {}"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"onRelayout")," | ",(0,i.kt)("inlineCode",{parentName:"li"},"function"),": callback function invoked when relayout is triggered. Default: ",(0,i.kt)("inlineCode",{parentName:"li"},"onRelayout() {}"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"onSelected")," | ",(0,i.kt)("inlineCode",{parentName:"li"},"function"),": callback function invoked when elements are selected. Default: ",(0,i.kt)("inlineCode",{parentName:"li"},"onSelected() {}"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"onShare")," | ",(0,i.kt)("inlineCode",{parentName:"li"},"function"),': callback function invoked when clicking on the "Share" button. Default: ',(0,i.kt)("inlineCode",{parentName:"li"},"none"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"removeButtons")," | ",(0,i.kt)("inlineCode",{parentName:"li"},"boolean"),": controls whether to remove all buttons (aside from fullscreen button if enabled). Default: ",(0,i.kt)("inlineCode",{parentName:"li"},"false"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"toggleFullscreen")," | ",(0,i.kt)("inlineCode",{parentName:"li"},"boolean"),": controls whether to allow displaying the plot in fullscreen mode. Default: ",(0,i.kt)("inlineCode",{parentName:"li"},"true"),".")),(0,i.kt)("h2",{id:"examples"},"Examples"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"<Plotly\n    data={[{\n        values: [ 24, 7, 0.5 ],\n        labels: [ 'English', 'Spanish', 'Other' ],\n        type: 'pie'\n            }]}\n    layout={{ width: 300 }}\n/>\n")))}m.isMDXComponent=!0}}]);