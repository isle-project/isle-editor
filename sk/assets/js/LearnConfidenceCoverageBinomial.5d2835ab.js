(self.webpackChunk=self.webpackChunk||[]).push([[5685],{393478:function(e,t,a){"use strict";a.r(t);a(382139);var r,n,o,i,l,s,p,c,d,u,Z=a(858255),f=a(264659),v=a(904730),m=a(673989),h=a(175663),y=a(750591),g=a(575630),w=a(151119),b=a(202784),x=(a(213980),a(387612)),k=a(198),S=a(471275),C=a(312594),B=a(260952),q=a(458264),N=a(409788),P=a(213763),T=a(472482),R=a(279874),z=a(537478),Y=a(987814),_=a(690473),A=a(32593),G=a.n(A),L=a(695688),V=a.n(L),H=a(848941),K=a.n(H),O=a(465810),W=a.n(O),X=a(74039),D=a.n(X),F=a(163420),j=a(997354),E=a(304267),I=a(821337),J=a(228856),M=a(144571),Q=a(741709);function U(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var a,r=(0,g.Z)(e);if(t){var n=(0,g.Z)(this).constructor;a=Reflect.construct(r,arguments,n)}else a=r.apply(this,arguments);return(0,y.Z)(this,a)}}var $={p:{tooltip:"Success probability"},n:{tooltip:"Number of trials"},alpha:{tooltip:"Significance level"},Z:{tooltip:"Standard normal quantile"}},ee=function(e){(0,h.Z)(a,e);var t=U(a);function a(e){var r;return(0,f.Z)(this,a),r=t.call(this,e),(0,w.Z)((0,m.Z)(r),"onGenerate",(function(e,t,a){for(var n=0,o=1-a,i=new Array(20),l=0;l<20;l++){for(var s=new Array(e),p=0;p<s.length;p++)s[p]=K()()<=t?1:0;var c=(0,I.Z)(s),d=void 0;d=r.state.useSampleProp?V()(c*(1-c)/e):V()(t*(1-t)/e);var u={num:l+1,yval:c,err:G()(d*W()(1-o/2,0,1))};u.text=u.yval-u.err>t||u.yval+u.err<t?"does not contain p":"contains p","contains p"===u.text&&(n+=1),u.text="[".concat(D()(u.yval-u.err,-2),", ").concat(D()(u.yval+u.err,-2),"] ")+u.text,i[l]=u}r.setState({nTrapped:n,p:t,errorBars:i})})),r.state={errorBars:[],p:null,nTrapped:null,useSampleProp:!0},r}return(0,v.Z)(a,[{key:"renderChart",value:function(){var e=this,t=this.state.errorBars;return t&&0!==t.length?(0,Z.Z)(N.Z,{padding:30,height:180,theme:P.Z.material,domain:{y:[0,1]}},void 0,(0,Z.Z)(T.Z,{padding:20,standalone:!1,tickCount:20,style:{tickLabels:{fontSize:"9px"}}}),r||(r=(0,Z.Z)(T.Z,{dependentAxis:!0,padding:20,standalone:!1})),(0,Z.Z)(R.Z,{animate:{duration:500},data:this.state.errorBars,labelComponent:n||(n=(0,Z.Z)(z.Z,{})),style:{data:{fill:function(t){return t.datum.yval-t.datum.err>e.state.p||t.datum.yval+t.datum.err<e.state.p?"darkred":"steelblue"}}},x:"num",y:"yval",labels:function(e){return"Sample proportion ".concat(D()(e.datum.yval,-3))}}),(0,Z.Z)(Y.Z,{animate:{duration:500},labelComponent:o||(o=(0,Z.Z)(z.Z,{})),style:{data:{stroke:function(t){return t.datum.yval-t.datum.err>e.state.p||t.datum.yval+t.datum.err<e.state.p?"darkred":"steelblue"}}},data:this.state.errorBars,x:"num",y:"yval",errorY:function(e){return e.err},labels:function(e){return e.datum.text}}),(0,Z.Z)(_.Z,{data:[{x:1,y:this.state.p},{x:20,y:this.state.p}]})):null}},{key:"render",value:function(){var e,t=this,a=this.props.t;return e=this.props.intro?this.props.intro:(0,Z.Z)("div",{},void 0,(0,Z.Z)("p",{},void 0,(0,Z.Z)(x.c,{i18nKey:"binomial-intro",ns:"LearnConfidenceCoverage"},void 0,"Now we will switch to asking a Yes/No question about a population. We are interested in estimating the true population proportion ",i||(i=(0,Z.Z)(j.Z,{raw:"p"})),' of "Yes" answers (for example, what proportion of the population has blue eyes?).  We can take a sample of size ',l||(l=(0,Z.Z)(j.Z,{raw:"n"})),', find how many observations in our sample are a "Yes" (X), and then estimate the true proportion ',s||(s=(0,Z.Z)(j.Z,{raw:"p"}))," with ",p||(p=(0,Z.Z)(j.Z,{raw:"\\hat{p} = \\frac{X}{n}",elems:$})),". Then ",c||(c=(0,Z.Z)(j.Z,{raw:"\\hat{p} \\sim \\text{Normal}\\left( p, \\sqrt{ \\tfrac{p(1-p)}{n} } \\right)",elems:$})),". Our confidence interval is then ",(0,Z.Z)(E.Z,{tooltip:"".concat(this.state.useSampleProp?a("click-pop-proportion"):a("click-sample-proportion")),active:this.props.sampleStats,onChange:function(e){t.setState({useSampleProp:1===e})}},void 0,(0,Z.Z)(j.Z,{raw:"\\hat{p} \\pm Z_{".concat(this.props.quartileNotation?"\\alpha/2":"\\text{critical}","} \\cdot \\sqrt{ \\frac{p(1-p)}{n}}"),elems:$}),(0,Z.Z)(j.Z,{raw:"\\hat{p} \\pm Z_{".concat(this.props.quartileNotation?"\\alpha/2":"\\text{critical}","} \\cdot \\sqrt{ \\frac{\\hat p(1-\\hat p)}{n}}"),elems:$})),".")),d||(d=(0,Z.Z)("p",{},void 0,(0,Z.Z)(x.c,{i18nKey:"binomial-intro-end",ns:"LearnConfidenceCoverage"},void 0,"For our choice of sample size (n), true proportion ",(0,Z.Z)(j.Z,{raw:"p"}),", and confidence level, we will simulate ",(0,Z.Z)(j.Z,{raw:"20"})," different samples from our normal distribution and calculate the corresponding sample proportions and confidence intervals.")))),(0,Z.Z)(B.Z,{className:"coverage-card"},void 0,(0,Z.Z)(B.Z.Header,{as:"h4"},void 0,a("confidence-interval-coverage")),(0,Z.Z)(B.Z.Body,{},void 0,(0,Z.Z)(S.Z,{},void 0,(0,Z.Z)(q.Z,{},void 0,e),(0,Z.Z)(q.Z,{},void 0,(0,Z.Z)(C.Z,{md:5},void 0,(0,Z.Z)(F.Z,{title:a("change-parameters"),onGenerate:this.onGenerate,autoStart:!0,id:"confidence_coverage_binomial"},void 0,(0,Z.Z)(Q.Z,{legend:"".concat(a("sample-size")," (n)"),defaultValue:30,max:999,step:1}),(0,Z.Z)(Q.Z,{legend:"".concat(a("true-proportion")," (p)"),defaultValue:.5,max:1,min:0,step:.01}),(0,Z.Z)(M.Z,{legend:a("confidence-level"),defaultValue:.95,min:.01,max:.99,step:.01,fractionDigits:2})),u||(u=(0,Z.Z)(J.Z,{id:"coverage-module-binomial"}))),(0,Z.Z)(C.Z,{md:7},void 0,(0,Z.Z)(B.Z,{},void 0,(0,Z.Z)(B.Z.Header,{as:"h4"},void 0,a("confidence-intervals")),(0,Z.Z)(B.Z.Body,{},void 0,this.renderChart(),(0,Z.Z)("p",{},void 0,a("capture-true-proportion",{nTrapped:this.state.nTrapped})," ",(0,Z.Z)("b",{},void 0,"(",a("coverage"),": ",this.state.nTrapped/20,").")))))))))}}]),a}(b.Component);ee.defaultProps={intro:null,quartileNotation:!0,sampleStats:!0},t.default=(0,k.Z)("learn/confidence-coverage")(ee)}}]);