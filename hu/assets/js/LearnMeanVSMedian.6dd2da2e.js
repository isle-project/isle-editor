"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[33678],{75149:function(e,t,a){a.r(t);var n=a(202784),s=a(213980),o=a.n(s),l=a(198),i=a(770561),r=a(471275),m=a(458264),c=a(312594),h=a(790817),d=a(257457),u=a(323522),g=a(396234),p=a(328731),E=a(690299),M=a.n(E),y=a(32593),b=a.n(y),f=a(74039),x=a.n(f),L=a(848941),v=a.n(L),D=a(523632),w=a.n(D),A=a(113999),Z=a.n(A),S=a(841908),G=a.n(S),k=a(172888),C=a(123103),j=a(487890),N=Object.defineProperty,P=(e,t,a)=>(((e,t,a)=>{t in e?N(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a})(e,"symbol"!=typeof t?t+"":t,a),a);const U=M()("isle:mean-vs-median");class _ extends n.Component{constructor(e){super(e),P(this,"medianEvaluation",(e=>{if(e.stopPropagation(),!this.state.showLognormalMedian){let e=b()(Z().median(this.state.mu,this.state.sigma)-this.state.medianLognormalGuess),t=this.props.t("a-bit-off"),a=this.state.lognormalDomain.x[1];e<a/10&&(t=this.props.t("good")),e<a/20&&(t=this.props.t("very-good")),this.singleAccMedian(e);this.context.addNotification({title:this.props.t("score"),message:t,position:"tc",level:"success"}),this.props.logAction("GUESS_MEDIAN",e,{},"members"),this.setState({showLognormalMedian:!0})}})),P(this,"meanEvaluation",(e=>{if(e.stopPropagation(),!this.state.showLognormalMean){let e=b()(Z().mean(this.state.mu,this.state.sigma)-this.state.meanLognormalGuess),t=this.props.t("a-bit-off"),a=this.state.lognormalDomain.x[1];e<a/10&&(t=this.props.t("good")),e<a/20&&(t=this.props.t("very-good")),this.singleAccMean(e);this.context.addNotification({title:this.props.t("score"),message:t,position:"tc",level:"success"}),this.props.logAction("GUESS_MEAN",e,{},"members"),this.setState({showLognormalMean:!0})}})),P(this,"generateData",(()=>{let e=1*this.rand()-.5,t=2*this.rand()+.01,a=4+Z().stdev(e,t),n=w()(0,a,80).map((a=>({x:a,y:Z().pdf(a,e,t)})));this.setState({lognormalData:n,mu:e,sigma:t,lognormalDomain:{x:[0,a],y:[0,Z().pdf(Z().mode(e,t),e,t)]},showLognormalMean:!1,showLognormalMedian:!1})})),this.state={mu:0,sigma:1,lognormalData:[],lognormalDomain:{x:[0,4],y:[0,3]},meanLognormalGuess:1,medianLognormalGuess:1,showLognormalMean:!1,showLognormalMedian:!1};const t={};e.seed&&(t.seed=e.seed),this.rand=v().factory(t),this.singleAccMean=G()(),this.groupAccMean=G()(),this.singleAccMedian=G()(),this.groupAccMedian=G()()}componentDidMount(){this.generateData(),this.unsubscribe=this.props.onAction({GUESS_MEDIAN:e=>{U("Received guess for median: ",e);const t=e.value;this.groupAccMedian(t),this.forceUpdate()},GUESS_MEAN:e=>{U("Received guess for mean: ",e);const t=e.value;this.groupAccMean(t),this.forceUpdate()}})}componentWillUnmount(){this.unsubscribe&&this.unsubscribe()}renderMeanPanel(){const{t:e}=this.props;return n.createElement(h.Z,null,n.createElement(h.Z.Header,{as:"h4"},e("mean")),n.createElement(h.Z.Body,null,n.createElement(u.k,{domain:this.state.lognormalDomain,containerComponent:n.createElement(g.o,{events:{onClick:this.meanEvaluation},cursorDimension:"x",cursorLabel:e=>`${x()(e.x,-1)}`,onCursorChange:e=>{U(`Received cursor change: ${e}`),this.state.showLognormalMean||this.setState({meanLognormalGuess:e})}})},n.createElement(p.j,{data:this.state.lognormalData,x:"x",y:"y"}),this.state.showLognormalMean?n.createElement(p.j,{data:[{x:this.state.meanLognormalGuess,y:0},{x:this.state.meanLognormalGuess,y:this.state.lognormalDomain.y[1]}],labels:["Your Guess",""]}):null,this.state.showLognormalMean?n.createElement(p.j,{data:[{x:Z().mean(this.state.mu,this.state.sigma),y:0},{x:Z().mean(this.state.mu,this.state.sigma),y:this.state.lognormalDomain.y[1]}],labels:["","True Mean"]}):null)))}renderMedianPanel(){const{t:e}=this.props;return n.createElement(h.Z,null,n.createElement(h.Z.Header,{as:"h4"},e("median")),n.createElement(h.Z.Body,null,n.createElement(u.k,{domain:this.state.lognormalDomain,containerComponent:n.createElement(g.o,{events:{onClick:this.medianEvaluation},cursorDimension:"x",cursorLabel:e=>`${x()(e.x,-1)}`,onCursorChange:e=>{this.state.showLognormalMedian||this.setState({medianLognormalGuess:e})}})},n.createElement(p.j,{data:this.state.lognormalData,x:"x",y:"y"}),this.state.showLognormalMedian?n.createElement(p.j,{data:[{x:this.state.medianLognormalGuess,y:0},{x:this.state.medianLognormalGuess,y:this.state.lognormalDomain.y[1]}],labels:["Your Guess",""]}):null,this.state.showLognormalMedian?n.createElement(p.j,{data:[{x:Z().median(this.state.mu,this.state.sigma),y:0},{x:Z().median(this.state.mu,this.state.sigma),y:this.state.lognormalDomain.y[1]}],labels:["","True Median"]}):null)))}render(){const{t:e}=this.props;return n.createElement(h.Z,{style:this.props.style},n.createElement(h.Z.Header,{as:"h3"},this.props.header?this.props.header:e("measures-of-location-header")),n.createElement(h.Z.Body,null,n.createElement(r.Z,null,this.props.intro,n.createElement(m.Z,null,n.createElement(c.Z,{md:6},this.renderMeanPanel()),n.createElement(c.Z,{md:6},this.renderMedianPanel())),n.createElement(m.Z,null,n.createElement("div",{style:{paddingTop:"20px",maxWidth:400,margin:"0 auto 10px"}},n.createElement(i.Z,{variant:"primary",size:"lg",onClick:this.generateData},e("generate-new-data")))),n.createElement(m.Z,null,this.props.showStatistics?n.createElement(d.Z,{bordered:!0},n.createElement("thead",null,n.createElement("tr",null,n.createElement("th",null),n.createElement("th",null,e("you")),n.createElement("th",null,e("group")))),n.createElement("tbody",null,n.createElement("tr",null,n.createElement("th",null,e("average-distance-from-mean")),n.createElement("td",null,x()(this.singleAccMean(),-2)),n.createElement("td",null,x()(this.groupAccMean(),-2))),n.createElement("tr",null,n.createElement("th",null,e("average-distance-from-median")),n.createElement("td",null,x()(this.singleAccMedian(),-2)),n.createElement("td",null,x()(this.groupAccMedian(),-2))))):null)),this.props.feedback?n.createElement(k.Z,{id:"mean-vs-median"}):null))}}_.defaultProps={feedback:!1,header:null,intro:null,seed:null,showStatistics:!1,style:{}},_.propTypes={feedback:o().bool,header:o().string,intro:o().node,seed:o().number,showStatistics:o().bool,style:o().object},_.contextType=C.Z,t.default=(0,j.D)("MEAN_VS_MEDIAN")((0,l.Z)("learn/mean-vs-median")(_))}}]);