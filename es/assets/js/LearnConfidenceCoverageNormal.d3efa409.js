"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[7136],{580745:function(e,t,a){a.r(t);var n=a(497326),r=a(894578),l=a(202784),o=a(213980),i=a.n(o),m=a(219637),s=a(198),c=a(471275),u=a(312594),d=a(790817),p=a(458264),f=a(323522),v=a(844204),h=a(850013),Z=a(215476),E=a(713506),g=a(700865),y=a(357521),S=a(32593),b=a.n(S),x=a(961239),w=a.n(x),k=a(465810),C=a.n(k),q=a(592460),B=a.n(q),N=a(74039),T=a.n(N),D=a(695688),z=a.n(D),V=a(174672),X=a(712013),_=a(837898),A=a(269891),G=a(294942),H=a(195065),L=a(519907),O=a(649985),P=Object.defineProperty,j=function(e,t,a){return function(e,t,a){t in e?P(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a}(e,"symbol"!=typeof t?t+"":t,a),a},F={mu:{tooltip:"Mean"},sigma:{tooltip:"Standard Deviation"},n:{tooltip:"Sample Size"},alpha:{tooltip:"Significance level"},Z:{tooltip:"Standard normal quantile"},S:{tooltip:"Sample standard deviation"}},K=function(e){function t(t){var a;return a=e.call(this,t)||this,j((0,n.Z)(a),"onGenerate",(function(e,t,n,r){for(var l=0,o=1-r,i=new Array(20),m=0;m<20;m++){for(var s=new Array(e),c=0;c<s.length;c++)s[c]=B()(t,n);var u=(0,L.Z)(s),d=void 0;if(a.state.useSampleSD){var p=(0,O.Z)(s)/z()(e);d=b()(p*w()(1-o/2,e-1))}else{var f=n/z()(e);d=b()(f*C()(1-o/2,0,1))}var v={num:m+1,yval:u,err:d};v.text=v.yval-v.err>t||v.yval+v.err<t?"does not contain mu":"contains mu","contains mu"===v.text&&(l+=1),v.text="["+T()(v.yval-v.err,-2)+", "+T()(v.yval+v.err,-2)+"] "+v.text,i[m]=v}a.setState({nTrapped:l,mu:t,errorBars:i})})),a.state={errorBars:[],mu:null,nTrapped:null,useSampleSD:!1},a}(0,r.Z)(t,e);var a=t.prototype;return a.renderChart=function(){var e=this,t=this.state.errorBars;return t&&0!==t.length?l.createElement(f.Z,{padding:{top:20,bottom:30,left:40,right:20},height:180,theme:v.Z.material},l.createElement(h.Z,{padding:20,standalone:!1,tickCount:20,style:{tickLabels:{fontSize:"9px"}}}),l.createElement(h.Z,{dependentAxis:!0,padding:20,standalone:!1}),l.createElement(Z.Z,{animate:{duration:500},data:this.state.errorBars,labelComponent:l.createElement(E.Z,null),style:{data:{fill:function(t){return t.datum.yval-t.datum.err>e.state.mu||t.datum.yval+t.datum.err<e.state.mu?"darkred":"steelblue"}}},x:"num",y:"yval",labels:function(e){return"Sample mean: "+T()(e.datum.yval,-3)}}),l.createElement(g.Z,{animate:{duration:500},labelComponent:l.createElement(E.Z,null),style:{data:{stroke:function(t){return t.datum.yval-t.datum.err>e.state.mu||t.datum.yval+t.datum.err<e.state.mu?"darkred":"steelblue"}}},data:this.state.errorBars,x:"num",y:"yval",errorY:function(e){return e.err},labels:function(e){return e.datum.text}}),l.createElement(y.Z,{data:[{x:1,y:this.state.mu},{x:20,y:this.state.mu}]})):null},a.render=function(){var e,t=this,a=this.props.t;return e=this.props.intro?this.props.intro:l.createElement("p",null,l.createElement(_.Z,{raw:"X \\sim \\text{Normal}\\left( \\mu, \\sigma \\right)",elems:F}),". ",a("then")," ",l.createElement(_.Z,{raw:"\\bar X \\sim \\text{Normal}\\left( \\mu, \\tfrac{\\sigma}{\\sqrt{n}} \\right)",elems:F}),". ",a("normal-intro")," ",l.createElement(X.Z,{tooltip:""+(this.state.useSampleSD?a("click-pop-stdev"):a("click-sample-stdev")),active:this.props.sampleStats,onChange:function(e){t.setState({useSampleSD:1===e})}},l.createElement(_.Z,{raw:"\\bar X \\pm Z_{"+(this.props.quartileNotation?"\\tfrac{\\alpha}{2}":"\\text{critical}")+"} \\cdot \\frac{\\sigma}{\\sqrt{n}}",elems:F}),l.createElement(_.Z,{raw:"\\bar X \\pm t_{"+(this.props.quartileNotation?"\\tfrac{\\alpha}{2}":"\\text{critical}")+"} \\cdot \\frac{S}{\\sqrt{n}}",elems:F})),".",l.createElement(m.c,{i18nKey:"normal-intro-end",ns:"LearnConfidenceCoverage"},"For our choice of sample size (n), ",l.createElement(_.Z,{raw:"\\mu"}),", ",l.createElement(_.Z,{raw:"\\sigma"}),", and confidence level, we will simulate 20 different samples from our normal distribution and calculate the corresponding sample means and confidence intervals.")),l.createElement(d.Z,{className:"coverage-card"},l.createElement(d.Z.Header,{as:"h4"},a("confidence-interval-coverage-mean")),l.createElement(d.Z.Body,null,l.createElement(c.Z,null,l.createElement(p.Z,null,e),l.createElement(p.Z,null,l.createElement(u.Z,{md:5},l.createElement(V.Z,{title:a("change-parameters"),onGenerate:this.onGenerate,autoStart:!0,id:"confidence_coverage_normal"},l.createElement(H.Z,{legend:a("sample-size")+" (n) ",defaultValue:30,max:100,step:1,min:1}),l.createElement(H.Z,{legend:a("mean")+" (mu)",defaultValue:1,max:5,min:-5,step:.1}),l.createElement(H.Z,{legend:a("standard-deviation"),defaultValue:1,max:20,min:.1,step:.1}),l.createElement(G.Z,{legend:a("confidence-level"),defaultValue:.95,min:.01,max:.99,step:.01,fractionDigits:2})),l.createElement(A.Z,{id:"coverage-module-normal"})),l.createElement(u.Z,{md:7},l.createElement(d.Z,null,l.createElement(d.Z.Header,{as:"h4"},a("confidence-intervals")),l.createElement(d.Z.Body,null,this.renderChart(),l.createElement("p",null,a("capture-true-proportion",{nTrapped:this.state.nTrapped})," ",l.createElement("b",null,"(",a("coverage"),":  ",this.state.nTrapped/20,").")))))))))},t}(l.Component);K.defaultProps={intro:null,quartileNotation:!0,sampleStats:!0},K.propTypes={intro:i().oneOfType([i().node,i().string]),quartileNotation:i().bool,sampleStats:i().bool},t.default=(0,s.Z)("learn/confidence-coverage")(K)}}]);