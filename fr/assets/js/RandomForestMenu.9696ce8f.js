"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[5738],{24102:function(e,t,n){n.r(t);var a=n(202784),i=n(213980),s=n.n(i),r=n(770561),o=n(790817),l=n(320231),c=n.n(l),u=n(588703),m=n.n(u),h=n(295943),d=n.n(h),p=n(695688),y=n.n(p),g=n(440835),f=n(506078),C=n(701647),T=n(745771),E=n(691334),Z=n(581728),x=Object.defineProperty,v=(e,t,n)=>(((e,t,n)=>{t in e?x(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n})(e,"symbol"!=typeof t?t+"":t,n),n);function b(e,t){return e?"Classificiation"===t?d()(y()(e.length)):e.length<3?1:d()(e.length/3):1}class q extends a.Component{constructor(e){super(e),v(this,"compute",(()=>{let{y:e,x:t,type:n,nTrees:i,nTry:s,impurityMeasure:r,scoreThreshold:o,maxTreeDepth:l,minItemsCount:c}=this.state;const u=a.createElement(T.Z,{x:t,y:e,type:n,nTrees:i,nTry:s,impurityMeasure:r,scoreThreshold:o,maxTreeDepth:l,minItemsCount:c,quantitative:this.props.quantitative,data:this.props.data,onPredict:this.props.onPredict});this.props.logAction(E.t4,{y:e,x:t,type:n,nTrees:i,nTry:s}),this.props.onCreated(u)})),this.state={y:e.categorical[0],x:e.quantitative[0],type:"Classification",nTrees:50,nTry:1,impurityMeasure:"gini",scoreThreshold:.01,maxTreeDepth:20,minItemsCount:50}}render(){const{categorical:e,quantitative:t,t:n}=this.props,{x:i,y:s,type:l,nTrees:u,nTry:h}=this.state;return a.createElement(o.Z,{style:{fontSize:"14px",maxWidth:600}},a.createElement(o.Z.Header,{as:"h4"},n("Random Forest"),a.createElement(Z.Z,{title:n("Random Forest"),content:"Instead of growing a single decision tree, a random forest as an ensemble method constructs many decision trees at once and returns the average of the predictions (regression case) or the majority vote (classification case) of the individual trees"})),a.createElement(o.Z.Body,{className:"d-grid gap-3"},a.createElement(g.Z,{legend:n("type"),options:["Classification"],defaultValue:l,onChange:n=>{n!==this.state.type&&this.setState({type:n,y:"Classification"===n?e[0]:t[0],nTry:b(this.state.x,n)})}}),a.createElement(g.Z,{legend:n("outcome-y"),options:"Classification"===l?e:t,defaultValue:s,onChange:e=>this.setState({y:e})}),a.createElement(g.Z,{legend:n("predictors-x"),multi:!0,options:c()(t.concat(e)),defaultValue:i||"",onChange:e=>{this.setState({x:e,nTry:b(e,l)})}}),a.createElement(f.Z,{legend:n("number-of-trees"),defaultValue:u,inputStyle:{float:"right"},onChange:e=>this.setState({nTrees:e}),tooltipPlacement:"top",min:1}),a.createElement(f.Z,{legend:n("predictors-to-check"),defaultValue:h,inputStyle:{float:"right"},onChange:e=>this.setState({nTry:e}),tooltipPlacement:"top",min:1,max:m()(i)?i.length:1}),a.createElement(C.Z,{header:n("change-tree-features"),headerStyle:{fontSize:"1rem"}},a.createElement(f.Z,{legend:n("score-threshold-for-split"),min:0,max:1,step:.001,defaultValue:this.state.scoreThreshold,onChange:e=>this.setState({scoreThreshold:e})}),a.createElement(f.Z,{legend:n("maximum-tree-depth"),min:1,max:50,defaultValue:this.state.maxTreeDepth,onChange:e=>this.setState({maxTreeDepth:e})}),a.createElement(f.Z,{legend:n("min-obs-leafs"),min:1,defaultValue:this.state.minItemsCount,onChange:e=>this.setState({minItemsCount:e})})),"Classification"===l?a.createElement(g.Z,{legend:n("impurity-measure"),defaultValue:this.state.impurityMeasure,options:["gini","entropy"],onChange:e=>this.setState({impurityMeasure:e})}):null,a.createElement(r.Z,{disabled:!i||0===i.length,variant:"primary",onClick:this.compute},n("calculate"))))}}q.defaultProps={logAction(){}},q.propTypes={categorical:s().array.isRequired,quantitative:s().array.isRequired,data:s().object.isRequired,logAction:s().func,onCreated:s().func.isRequired,onPredict:s().func.isRequired},t.default=q},581728:function(e,t,n){var a=n(202784),i=n(213980),s=n.n(i),r=n(770561),o=n(435376),l=n(992500),c=n(862816),u=n(461298);const m=e=>{const t=a.createElement(o.Z,{id:"popover-positioned-right"},a.createElement(l.Z,null,e.title),a.createElement(c.Z,null,e.content));return a.createElement(u.Z,{trigger:["click","hover","focus"],placement:"left",rootClose:!0,overlay:t},a.createElement(r.Z,{"aria-label":e.title,size:"sm",variant:"outline-secondary",className:"question-button"},a.createElement("div",{className:"fa fa-question"})))};m.propTypes={content:s().oneOfType([s().string,s().node]).isRequired,title:s().string.isRequired},t.Z=m}}]);