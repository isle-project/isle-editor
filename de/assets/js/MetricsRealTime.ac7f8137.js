"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[3548],{558142:function(t,s,e){e.r(s);var n=e(202784),i=e(213980),o=e.n(i),r=e(690299),u=e.n(r),a=e(552770),c=e.n(a),h=e(123103),l=e(302108);const p=u()("isle:real-time-metrics");class f extends n.Component{constructor(){super(),this.state={actions:[]}}componentDidMount(){this._isMounted=!0;const t=this.context;t&&(p("Listening for all actions with id: "+this.props.for),this.unsubscribe=t.subscribe(((t,s)=>{if(t===l.Wh){if(s.type===l.gz||s.type===l.sS)return null;const t=c()(this.props.for,s.id);if(-1!==t){let e=this.state.actions.slice();e.push(this.props.returnFullObject?s:s.value),this.setState({actions:e},(()=>{p("A new value for the given IDs was submitted: "+JSON.stringify(this.state.actions)),this.props.onData(this.state.actions,t),this.props.onDatum(this.state.actions[this.state.actions.length-1],t)}))}}this._isMounted&&this.forceUpdate()})))}componentWillUnmount(){this._isMounted=!1,this.unsubscribe&&this.unsubscribe()}render(){return n.createElement("div",null)}}f.defaultProps={onData(){},onDatum(){},returnFullObject:!1},f.propTypes={for:o().array.isRequired,onData:o().func,onDatum:o().func,returnFullObject:o().bool},f.contextType=h.Z,s.default=f}}]);