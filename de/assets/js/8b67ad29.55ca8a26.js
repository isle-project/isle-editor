"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[56209],{603905:function(e,t,n){n.d(t,{Zo:function(){return m},kt:function(){return c}});var r=n(202784);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=r.createContext({}),d=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},m=function(e){var t=d(e.components);return r.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,p=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),u=d(n),c=i,f=u["".concat(p,".").concat(c)]||u[c]||s[c]||a;return n?r.createElement(f,l(l({ref:t},m),{},{components:n})):r.createElement(f,l({ref:t},m))}));function c(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,l=new Array(a);l[0]=u;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var d=2;d<a;d++)l[d]=n[d];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},57315:function(e,t,n){n.r(t),n.d(t,{assets:function(){return k},contentTitle:function(){return c},default:function(){return N},frontMatter:function(){return u},metadata:function(){return f},toc:function(){return g}});var r=n(603905),i=Object.defineProperty,a=Object.defineProperties,l=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,d=Object.prototype.propertyIsEnumerable,m=(e,t,n)=>t in e?i(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,s=(e,t)=>{for(var n in t||(t={}))p.call(t,n)&&m(e,n,t[n]);if(o)for(var n of o(t))d.call(t,n)&&m(e,n,t[n]);return e};const u={id:"map",title:"Map",sidebar_label:"Map"},c=void 0,f={unversionedId:"plots/map",id:"plots/map",title:"Map",description:"Eine geografische Karte, die entweder mit Ortsnamen oder mit L\xe4ngen-/Breitengraden versehen werden kann.",source:"@site/i18n/de/docusaurus-plugin-content-docs/current/plots/map.md",sourceDirName:"plots",slug:"/plots/map",permalink:"/de/docs/plots/map",draft:!1,editUrl:"https://github.com/isle-project/isle-editor/edit/master/docusaurus/website/docs/plots/map.md",tags:[],version:"current",lastUpdatedBy:"Planeshifter",lastUpdatedAt:1633403869,formattedLastUpdatedAt:"5. Okt. 2021",frontMatter:{id:"map",title:"Map",sidebar_label:"Map"},sidebar:"docs",previous:{title:"Line Plot",permalink:"/de/docs/plots/lineplot"},next:{title:"Mosaic Plot",permalink:"/de/docs/plots/mosaicplot"}},k={},g=[{value:"Optionen",id:"optionen",level:2},{value:"Beispiele",id:"beispiele",level:2}],b={toc:g};function N(e){var t,n=e,{components:i}=n,m=((e,t)=>{var n={};for(var r in e)p.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&o)for(var r of o(e))t.indexOf(r)<0&&d.call(e,r)&&(n[r]=e[r]);return n})(n,["components"]);return(0,r.kt)("wrapper",(t=s(s({},b),m),a(t,l({components:i,mdxType:"MDXLayout"}))),(0,r.kt)("p",null,"Eine geografische Karte, die entweder mit Ortsnamen oder mit L\xe4ngen-/Breitengraden versehen werden kann."),(0,r.kt)("h2",s({},{id:"optionen"}),"Optionen"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"data")," | ",(0,r.kt)("inlineCode",{parentName:"li"},"object (required)"),": Objekt mit Werte-Arrays f\xfcr jede Variable. Default: ",(0,r.kt)("inlineCode",{parentName:"li"},"none"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"scope")," | ",(0,r.kt)("inlineCode",{parentName:"li"},"string"),": Umfang der anzuzeigenden Karte. Default: ",(0,r.kt)("inlineCode",{parentName:"li"},"'world'"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"locations")," | ",(0,r.kt)("inlineCode",{parentName:"li"},"string"),": Name der Variablen in ",(0,r.kt)("inlineCode",{parentName:"li"},"data"),", die Ortsnamen enth\xe4lt. Default: ",(0,r.kt)("inlineCode",{parentName:"li"},"none"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"locationmode")," | ",(0,r.kt)("inlineCode",{parentName:"li"},"string"),": entweder ",(0,r.kt)("inlineCode",{parentName:"li"},"ISO-3"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"USA-Staaten")," oder ",(0,r.kt)("inlineCode",{parentName:"li"},"L\xe4ndernamen"),", die angeben, wie Werte in ",(0,r.kt)("inlineCode",{parentName:"li"},"Orte")," kodiert werden. Default: ",(0,r.kt)("inlineCode",{parentName:"li"},"'country names'"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"longitude")," | ",(0,r.kt)("inlineCode",{parentName:"li"},"string"),": Name der Variablen in ",(0,r.kt)("inlineCode",{parentName:"li"},"data"),", die die L\xe4ngengradwerte enth\xe4lt. Default: ",(0,r.kt)("inlineCode",{parentName:"li"},"none"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"latitude")," | ",(0,r.kt)("inlineCode",{parentName:"li"},"string"),": Name der Variablen in ",(0,r.kt)("inlineCode",{parentName:"li"},"data"),", die die Breitengradwerte enth\xe4lt. Default: ",(0,r.kt)("inlineCode",{parentName:"li"},"none"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"showLand")," | ",(0,r.kt)("inlineCode",{parentName:"li"},"boolean"),": ob geografische Merkmale auf der Karte angezeigt werden sollen. Default: ",(0,r.kt)("inlineCode",{parentName:"li"},"false"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"aggregation")," | ",(0,r.kt)("inlineCode",{parentName:"li"},"string"),": Zeichenkette, die angibt, wie die Werte f\xfcr jeden Ort aggregiert werden sollen (entweder ",(0,r.kt)("inlineCode",{parentName:"li"},"sum"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"avg"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"min"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"max"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"mode"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"median"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"count"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"first"),", oder ",(0,r.kt)("inlineCode",{parentName:"li"},"last"),"). Default: ",(0,r.kt)("inlineCode",{parentName:"li"},"'sum'"),".")),(0,r.kt)("h2",s({},{id:"beispiele"}),"Beispiele"))}N.isMDXComponent=!0}}]);