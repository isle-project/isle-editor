"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[4070],{603905:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return m}});var r=t(202784);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var u=r.createContext({}),s=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},d=function(e){var n=s(e.components);return r.createElement(u.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},c=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,l=e.originalType,u=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),c=s(t),m=a,f=c["".concat(u,".").concat(m)]||c[m]||p[m]||l;return t?r.createElement(f,i(i({ref:n},d),{},{components:t})):r.createElement(f,i({ref:n},d))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var l=t.length,i=new Array(l);i[0]=c;var o={};for(var u in n)hasOwnProperty.call(n,u)&&(o[u]=n[u]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var s=2;s<l;s++)i[s]=t[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}c.displayName="MDXCreateElement"},739288:function(e,n,t){t.d(n,{Z:function(){return s}});var r=t(202784),a=Object.defineProperty,l=Object.getOwnPropertySymbols,i=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable,u=(e,n,t)=>n in e?a(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t;function s({children:e,hidden:n,className:t}){return r.createElement("div",((e,n)=>{for(var t in n||(n={}))i.call(n,t)&&u(e,t,n[t]);if(l)for(var t of l(n))o.call(n,t)&&u(e,t,n[t]);return e})({role:"tabpanel"},{hidden:n,className:t}),e)}},999947:function(e,n,t){t.d(n,{Z:function(){return k}});var r=t(202784),a=t(152670),l=t(434564),i=t(386010),o="tabItem_LplD",u=Object.defineProperty,s=Object.defineProperties,d=Object.getOwnPropertyDescriptors,p=Object.getOwnPropertySymbols,c=Object.prototype.hasOwnProperty,m=Object.prototype.propertyIsEnumerable,f=(e,n,t)=>n in e?u(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t,b=(e,n)=>{for(var t in n||(n={}))c.call(n,t)&&f(e,t,n[t]);if(p)for(var t of p(n))m.call(n,t)&&f(e,t,n[t]);return e};function g(e){var n,t,a;const{lazy:u,block:p,defaultValue:c,values:m,groupId:f,className:g}=e,k=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),v=null!=m?m:k.map((({props:{value:e,label:n,attributes:t}})=>({value:e,label:n,attributes:t}))),h=(0,l.lx)(v,((e,n)=>e.value===n.value));if(h.length>0)throw new Error(`Docusaurus error: Duplicate values "${h.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const y=null===c?c:null!=(a=null!=c?c:null==(n=k.find((e=>e.props.default)))?void 0:n.props.value)?a:null==(t=k[0])?void 0:t.props.value;if(null!==y&&!v.some((e=>e.value===y)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${y}" but none of its children has the corresponding value. Available values are: ${v.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:N,setTabGroupChoices:w}=(0,l.UB)(),[C,O]=(0,r.useState)(y),P=[],{blockElementScrollPositionUntilNextRender:j}=(0,l.o5)();if(null!=f){const e=N[f];null!=e&&e!==C&&v.some((n=>n.value===e))&&O(e)}const T=e=>{const n=e.currentTarget,t=P.indexOf(n),r=v[t].value;r!==C&&(j(n),O(r),null!=f&&w(f,r))},E=e=>{let n=null;switch(e.key){case"ArrowRight":{const t=P.indexOf(e.currentTarget)+1;n=P[t]||P[0];break}case"ArrowLeft":{const t=P.indexOf(e.currentTarget)-1;n=P[t]||P[P.length-1];break}}null==n||n.focus()};return r.createElement("div",{className:"tabs-container"},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":p},g)},v.map((({value:e,label:n,attributes:t})=>{return r.createElement("li",(a=b({role:"tab",tabIndex:C===e?0:-1,"aria-selected":C===e,key:e,ref:e=>P.push(e),onKeyDown:E,onFocus:T,onClick:T},t),l={className:(0,i.Z)("tabs__item",o,null==t?void 0:t.className,{"tabs__item--active":C===e})},s(a,d(l))),null!=n?n:e);var a,l}))),u?(0,r.cloneElement)(k.filter((e=>e.props.value===C))[0],{className:"margin-vert--md"}):r.createElement("div",{className:"margin-vert--md"},k.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==C})))))}function k(e){const n=(0,a.Z)();return r.createElement(g,b({key:String(n)},e))}},473687:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return f},contentTitle:function(){return b},metadata:function(){return g},assets:function(){return k},toc:function(){return v},default:function(){return y}});var r=t(603905),a=t(999947),l=t(739288),i=Object.defineProperty,o=Object.defineProperties,u=Object.getOwnPropertyDescriptors,s=Object.getOwnPropertySymbols,d=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,c=(e,n,t)=>n in e?i(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t,m=(e,n)=>{for(var t in n||(n={}))d.call(n,t)&&c(e,t,n[t]);if(s)for(var t of s(n))p.call(n,t)&&c(e,t,n[t]);return e};const f={id:"r-shell",title:"R Shell",sidebar_label:"R Shell"},b=void 0,g={unversionedId:"r/r-shell",id:"r/r-shell",title:"R Shell",description:"Eine interaktive R-Shell, die zum Ausf\xfchren von R-Befehlen in der Cloud mit OpenCPU verwendet werden kann.",source:"@site/i18n/de/docusaurus-plugin-content-docs/current/r/shell.md",sourceDirName:"r",slug:"/r/r-shell",permalink:"/de/docs/r/r-shell",editUrl:"https://github.com/isle-project/isle-editor/edit/master/docusaurus/website/docs/r/shell.md",tags:[],version:"current",lastUpdatedBy:"Planeshifter",lastUpdatedAt:1617049695,formattedLastUpdatedAt:"29.3.2021",frontMatter:{id:"r-shell",title:"R Shell",sidebar_label:"R Shell"},sidebar:"docs",previous:{title:"R Plot",permalink:"/de/docs/r/r-plot"},next:{title:"R Table",permalink:"/de/docs/r/r-table"}},k={},v=[{value:"Optionen",id:"optionen",level:2},{value:"Beispiele",id:"beispiele",level:2}],h={toc:v};function y(e){var n,t=e,{components:i}=t,c=((e,n)=>{var t={};for(var r in e)d.call(e,r)&&n.indexOf(r)<0&&(t[r]=e[r]);if(null!=e&&s)for(var r of s(e))n.indexOf(r)<0&&p.call(e,r)&&(t[r]=e[r]);return t})(t,["components"]);return(0,r.kt)("wrapper",(n=m(m({},h),c),o(n,u({components:i,mdxType:"MDXLayout"}))),(0,r.kt)("p",null,"Eine interaktive R-Shell, die zum Ausf\xfchren von R-Befehlen in der Cloud mit ",(0,r.kt)("a",m({parentName:"p"},{href:"https://www.opencpu.org/"}),"OpenCPU")," verwendet werden kann."),(0,r.kt)("h2",m({},{id:"optionen"}),"Optionen"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"code")," | ",(0,r.kt)("inlineCode",{parentName:"li"},"string"),": Zu bewertender R-Code. Default: ",(0,r.kt)("inlineCode",{parentName:"li"},"''"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"solution")," | ",(0,r.kt)("inlineCode",{parentName:"li"},"string"),": f\xfcr Programmierfragen, R-Code ",(0,r.kt)("inlineCode",{parentName:"li"},"string"),", der die offizielle L\xf6sung f\xfcr das Problem darstellt. Default: ",(0,r.kt)("inlineCode",{parentName:"li"},"''"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"hints")," | ",(0,r.kt)("inlineCode",{parentName:"li"},"array<(string|node)>"),": bei Programmierfragen eine Reihe von Hinweisen, die eine Hilfestellung bei der Herangehensweise an das Problem geben. Default: ",(0,r.kt)("inlineCode",{parentName:"li"},"[]"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"addPreceding")," | ",(0,r.kt)("inlineCode",{parentName:"li"},"boolean"),": wenn auf true gesetzt, wertet die Shell den gesamten Code der aktuellen Komponente und aller vorhergehenden aus, die in der Lektion vorkommen. Default: ",(0,r.kt)("inlineCode",{parentName:"li"},"false"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"libraries")," | ",(0,r.kt)("inlineCode",{parentName:"li"},"array"),': R-Bibliotheken, die automatisch geladen werden sollen, wenn der Eingabe-"Code" ausgef\xfchrt wird. Default: ',(0,r.kt)("inlineCode",{parentName:"li"},"[]"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"precompute")," | ",(0,r.kt)("inlineCode",{parentName:"li"},"boolean"),": steuert, ob der Standardcode ausgef\xfchrt werden soll, wenn die Komponente montiert ist. Default: ",(0,r.kt)("inlineCode",{parentName:"li"},"false"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"prependCode")," | ",(0,r.kt)("inlineCode",{parentName:"li"},"(string|array)"),": R-Code ",(0,r.kt)("inlineCode",{parentName:"li"},"string")," (oder ",(0,r.kt)("inlineCode",{parentName:"li"},"array")," von R-Codebl\xf6cken), der bei der Auswertung dem in ",(0,r.kt)("inlineCode",{parentName:"li"},"code")," gespeicherten Code vorangestellt wird. Default: ",(0,r.kt)("inlineCode",{parentName:"li"},"''"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"chat")," | ",(0,r.kt)("inlineCode",{parentName:"li"},"boolean"),": steuert, ob die Gruppenchatfunktionalit\xe4t aktiviert werden soll. Default: ",(0,r.kt)("inlineCode",{parentName:"li"},"false"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"disabled")," | ",(0,r.kt)("inlineCode",{parentName:"li"},"boolean"),": steuert, ob alle Benutzereingaben deaktiviert und der Codeblock statisch werden soll. Default: ",(0,r.kt)("inlineCode",{parentName:"li"},"false"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"lines")," | ",(0,r.kt)("inlineCode",{parentName:"li"},"number"),": Anzahl der anzuzeigenden Zeilen. Default: ",(0,r.kt)("inlineCode",{parentName:"li"},"5"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"resettable")," | ",(0,r.kt)("inlineCode",{parentName:"li"},"boolean"),": steuert, ob eine Reset-Taste zum Wiederherstellen der Standard-Codeeingabe angezeigt werden soll. Default: ",(0,r.kt)("inlineCode",{parentName:"li"},"false"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"style")," | ",(0,r.kt)("inlineCode",{parentName:"li"},"object"),": CSS-Inline-Stile. Default: ",(0,r.kt)("inlineCode",{parentName:"li"},"{}"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"onChange")," | ",(0,r.kt)("inlineCode",{parentName:"li"},"function"),": Callback, der bei jeder \xc4nderung der Textfeldeingabe aufgerufen wird. Default: ",(0,r.kt)("inlineCode",{parentName:"li"},"onChange() {}"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"onEvaluate")," | ",(0,r.kt)("inlineCode",{parentName:"li"},"function"),": Callback, der immer dann aufgerufen wird, wenn die Schaltfl\xe4che ",(0,r.kt)("inlineCode",{parentName:"li"},"Evaluate")," angeklickt wird. Default: ",(0,r.kt)("inlineCode",{parentName:"li"},"onEvaluate(){}"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"onResult")," | ",(0,r.kt)("inlineCode",{parentName:"li"},"function"),": Callback, der immer dann aufgerufen wird, wenn das Ergebnis einer Code-Ausf\xfchrung aus der Cloud bezogen wird. Das Ergebnis ",(0,r.kt)("inlineCode",{parentName:"li"},"String")," wird als einziges Argument an die Callback-Funktion \xfcbergeben. Default: ",(0,r.kt)("inlineCode",{parentName:"li"},"onResult() {}"),".")),(0,r.kt)("h2",m({},{id:"beispiele"}),"Beispiele"),(0,r.kt)(a.Z,{defaultValue:"minimal",values:[{label:"Minimal",value:"minimal"},{label:"Multiline",value:"multiline"},{label:"Precompute & Disabled",value:"precompute"},{label:"Using Libraries",value:"usingLibraries"},{label:"Add Preceding Code",value:"addPreceding"},{label:"Hints & Solution",value:"hintsAndSolution"}],lazy:!0,mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"minimal",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",m({parentName:"pre"},{className:"language-jsx",metastring:"live",live:!0}),'<RShell\n    code="abs(c(-2,3,-1))"\n/>\n'))),(0,r.kt)(l.Z,{value:"multiline",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",m({parentName:"pre"},{className:"language-jsx",metastring:"live",live:!0}),"<RShell code={`x <- runif( 100 );\ny <- 3.0 * x + rnorm( 100 );\nfit <- lm( y ~ x );\nsummary( fit );\n`} resettable />\n"))),(0,r.kt)(l.Z,{value:"precompute",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",m({parentName:"pre"},{className:"language-jsx",metastring:"live",live:!0}),'<RShell\n    code="abs(c(-2,3,-1))"\n    precompute\n    disabled\n    lines={2}\n/>\n'))),(0,r.kt)(l.Z,{value:"usingLibraries",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",m({parentName:"pre"},{className:"language-jsx",metastring:"live",live:!0}),"<RShell libraries={['dplyr']} code={'starwars %>% filter(species == \"Droid\")'} lines={2} />\n"))),(0,r.kt)(l.Z,{value:"addPreceding",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",m({parentName:"pre"},{className:"language-jsx",metastring:"live",live:!0}),'<RShell code="library(dplyr)" lines={2} disabled />\n\n<RShell code={\'starwars %>% filter(species == "Droid")\'} addPreceding lines={2} />\n'))),(0,r.kt)(l.Z,{value:"hintsAndSolution",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",m({parentName:"pre"},{className:"language-jsx",metastring:"live",live:!0}),'**(a)** Use the lm() function to regress `Price` on: `EngineSize`, `Origin`, `MPG.highway`, `MPG.city` and `Horsepower`.\n\n<RShell \n    id="prob1a"\n    code="" \n    solution={`cars.lm <- lm(Price ~ EngineSize + Origin + MPG.highway + MPG.city + Horsepower,\ndata = Cars93)\nsummary(cars.lm)`} \n    lines={5} \n    hints={["Use the model formula syntax to specify your regression equation. Type ?formula if you don\'t remember how formulas work.","You can use the summary() function to retrieve a detailed regression output for a lm object"]}\n/>\n')))))}y.isMDXComponent=!0}}]);