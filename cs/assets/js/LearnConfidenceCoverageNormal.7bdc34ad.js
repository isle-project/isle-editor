"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[37136],{456484:function(e,t,a){a.r(t);var n=a(202784),r=a(213980),l=a.n(r),s=a(38505),i=a(198),o=a(471275),m=a(312594),c=a(790817),d=a(458264),u=a(323522),p=a(844204),h=a(850013),f=a(215476),E=a(713506),v=a(700865),g=a(328731),Z=a(32593),y=a.n(Z),S=a(961239),b=a.n(S),x=a(465810),w=a.n(x),k=a(592460),C=a.n(k),q=a(74039),$=a.n(q),B=a(695688),N=a.n(B),T=a(691403),D=a(228713),z=a(194542),V=a(172888),X=a(658774),_=a(506078),A=a(99733),G=a(201),j=Object.defineProperty,H=(e,t,a)=>(((e,t,a)=>{t in e?j(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a})(e,"symbol"!=typeof t?t+"":t,a),a);const L={mu:{tooltip:"Mean"},sigma:{tooltip:"Standard Deviation"},n:{tooltip:"Sample Size"},alpha:{tooltip:"Significance level"},Z:{tooltip:"Standard normal quantile"},S:{tooltip:"Sample standard deviation"}};class O extends n.Component{constructor(e){super(e),H(this,"onGenerate",((e,t,a,n)=>{let r=0,l=1-n,s=new Array(20);for(let i=0;i<20;i++){let n=new Array(e);for(let e=0;e<n.length;e++)n[e]=C()(t,a);let o,m=(0,A.Z)(n);if(this.state.useSampleSD){const t=(0,G.Z)(n)/N()(e);o=y()(t*b()(1-l/2,e-1))}else{const t=a/N()(e);o=y()(t*w()(1-l/2,0,1))}let c={num:i+1,yval:m,err:o};c.text=c.yval-c.err>t||c.yval+c.err<t?"does not contain mu":"contains mu","contains mu"===c.text&&(r+=1),c.text=`[${$()(c.yval-c.err,-2)}, ${$()(c.yval+c.err,-2)}] `+c.text,s[i]=c}this.setState({nTrapped:r,mu:t,errorBars:s})})),this.state={errorBars:[],mu:null,nTrapped:null,useSampleSD:!1}}renderChart(){const{errorBars:e}=this.state;return e&&0!==e.length?n.createElement(u.k,{padding:{top:20,bottom:30,left:40,right:20},height:180,theme:p.J.material},n.createElement(h.E,{padding:20,standalone:!1,tickCount:20,style:{tickLabels:{fontSize:"9px"}}}),n.createElement(h.E,{dependentAxis:!0,padding:20,standalone:!1}),n.createElement(f.C,{animate:{duration:500},data:this.state.errorBars,labelComponent:n.createElement(E.Z,null),style:{data:{fill:e=>e.datum.yval-e.datum.err>this.state.mu||e.datum.yval+e.datum.err<this.state.mu?"darkred":"steelblue"}},x:"num",y:"yval",labels:e=>`Sample mean: ${$()(e.datum.yval,-3)}`}),n.createElement(v.i,{animate:{duration:500},labelComponent:n.createElement(E.Z,null),style:{data:{stroke:e=>e.datum.yval-e.datum.err>this.state.mu||e.datum.yval+e.datum.err<this.state.mu?"darkred":"steelblue"}},data:this.state.errorBars,x:"num",y:"yval",errorY:e=>e.err,labels:e=>e.datum.text}),n.createElement(g.j,{data:[{x:1,y:this.state.mu},{x:20,y:this.state.mu}]})):null}render(){const{t:e}=this.props;let t;return t=this.props.intro?this.props.intro:n.createElement("p",null,n.createElement(z.Z,{raw:"X \\sim \\text{Normal}\\left( \\mu, \\sigma \\right)",elems:L}),". ",e("then")," ",n.createElement(z.Z,{raw:"\\bar X \\sim \\text{Normal}\\left( \\mu, \\tfrac{\\sigma}{\\sqrt{n}} \\right)",elems:L}),". ",e("normal-intro")," ",n.createElement(D.Z,{tooltip:`${this.state.useSampleSD?e("click-pop-stdev"):e("click-sample-stdev")}`,active:this.props.sampleStats,onChange:e=>{this.setState({useSampleSD:1===e})}},n.createElement(z.Z,{raw:`\\bar X \\pm Z_{${this.props.quartileNotation?"\\tfrac{\\alpha}{2}":"\\text{critical}"}} \\cdot \\frac{\\sigma}{\\sqrt{n}}`,elems:L}),n.createElement(z.Z,{raw:`\\bar X \\pm t_{${this.props.quartileNotation?"\\tfrac{\\alpha}{2}":"\\text{critical}"}} \\cdot \\frac{S}{\\sqrt{n}}`,elems:L})),".",n.createElement(s.c,{i18nKey:"normal-intro-end",ns:"LearnConfidenceCoverage"},"For our choice of sample size (n), ",n.createElement(z.Z,{raw:"\\mu"}),", ",n.createElement(z.Z,{raw:"\\sigma"}),", and confidence level, we will simulate 20 different samples from our normal distribution and calculate the corresponding sample means and confidence intervals.")),n.createElement(c.Z,{className:"coverage-card"},n.createElement(c.Z.Header,{as:"h4"},e("confidence-interval-coverage-mean")),n.createElement(c.Z.Body,null,n.createElement(o.Z,null,n.createElement(d.Z,null,t),n.createElement(d.Z,null,n.createElement(m.Z,{md:5},n.createElement(T.Z,{title:e("change-parameters"),onGenerate:this.onGenerate,autoStart:!0,id:"confidence_coverage_normal"},n.createElement(_.Z,{legend:`${e("sample-size")} (n) `,defaultValue:30,max:100,step:1,min:1}),n.createElement(_.Z,{legend:`${e("mean")} (mu)`,defaultValue:1,max:5,min:-5,step:.1}),n.createElement(_.Z,{legend:e("standard-deviation"),defaultValue:1,max:20,min:.1,step:.1}),n.createElement(X.Z,{legend:e("confidence-level"),defaultValue:.95,min:.01,max:.99,step:.01,fractionDigits:2})),n.createElement(V.Z,{id:"coverage-module-normal"})),n.createElement(m.Z,{md:7},n.createElement(c.Z,null,n.createElement(c.Z.Header,{as:"h4"},e("confidence-intervals")),n.createElement(c.Z.Body,null,this.renderChart(),n.createElement("p",null,e("capture-true-proportion",{nTrapped:this.state.nTrapped})," ",n.createElement("b",null,"(",e("coverage"),":  ",this.state.nTrapped/20,").")))))))))}}O.defaultProps={intro:null,quartileNotation:!0,sampleStats:!0},O.propTypes={intro:l().oneOfType([l().node,l().string]),quartileNotation:l().bool,sampleStats:l().bool},t.default=(0,i.Z)("learn/confidence-coverage")(O)}}]);