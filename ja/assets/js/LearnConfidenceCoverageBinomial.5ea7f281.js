"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[5685],{797841:function(e,t,a){a.r(t);var n=a(497326),r=a(894578),l=a(202784),o=a(213980),i=a.n(o),p=a(38505),s=a(198),c=a(471275),m=a(312594),u=a(790817),d=a(458264),h=a(323522),f=a(844204),Z=a(850013),v=a(215476),E=a(713506),y=a(700865),b=a(357521),g=a(32593),w=a.n(g),x=a(695688),S=a.n(x),k=a(848941),C=a.n(k),q=a(465810),N=a.n(q),T=a(74039),B=a.n(T),P=a(174672),z=a(837898),Y=a(712013),_=a(519907),A=a(269891),G=a(294942),L=a(195065),O=Object.defineProperty,V=function(e,t,a){return function(e,t,a){t in e?O(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a}(e,"symbol"!=typeof t?t+"":t,a),a},H={p:{tooltip:"Success probability"},n:{tooltip:"Number of trials"},alpha:{tooltip:"Significance level"},Z:{tooltip:"Standard normal quantile"}},K=function(e){function t(t){var a;return a=e.call(this,t)||this,V((0,n.Z)(a),"onGenerate",(function(e,t,n){for(var r=0,l=1-n,o=new Array(20),i=0;i<20;i++){for(var p=new Array(e),s=0;s<p.length;s++)p[s]=C()()<=t?1:0;var c=(0,_.Z)(p),m=void 0;m=a.state.useSampleProp?S()(c*(1-c)/e):S()(t*(1-t)/e);var u={num:i+1,yval:c,err:w()(m*N()(1-l/2,0,1))};u.text=u.yval-u.err>t||u.yval+u.err<t?"does not contain p":"contains p","contains p"===u.text&&(r+=1),u.text="["+B()(u.yval-u.err,-2)+", "+B()(u.yval+u.err,-2)+"] "+u.text,o[i]=u}a.setState({nTrapped:r,p:t,errorBars:o})})),a.state={errorBars:[],p:null,nTrapped:null,useSampleProp:!0},a}(0,r.Z)(t,e);var a=t.prototype;return a.renderChart=function(){var e=this,t=this.state.errorBars;return t&&0!==t.length?l.createElement(h.Z,{padding:30,height:180,theme:f.Z.material,domain:{y:[0,1]}},l.createElement(Z.Z,{padding:20,standalone:!1,tickCount:20,style:{tickLabels:{fontSize:"9px"}}}),l.createElement(Z.Z,{dependentAxis:!0,padding:20,standalone:!1}),l.createElement(v.Z,{animate:{duration:500},data:this.state.errorBars,labelComponent:l.createElement(E.Z,null),style:{data:{fill:function(t){return t.datum.yval-t.datum.err>e.state.p||t.datum.yval+t.datum.err<e.state.p?"darkred":"steelblue"}}},x:"num",y:"yval",labels:function(e){return"Sample proportion "+B()(e.datum.yval,-3)}}),l.createElement(y.Z,{animate:{duration:500},labelComponent:l.createElement(E.Z,null),style:{data:{stroke:function(t){return t.datum.yval-t.datum.err>e.state.p||t.datum.yval+t.datum.err<e.state.p?"darkred":"steelblue"}}},data:this.state.errorBars,x:"num",y:"yval",errorY:function(e){return e.err},labels:function(e){return e.datum.text}}),l.createElement(b.Z,{data:[{x:1,y:this.state.p},{x:20,y:this.state.p}]})):null},a.render=function(){var e,t=this,a=this.props.t;return e=this.props.intro?this.props.intro:l.createElement("div",null,l.createElement("p",null,l.createElement(p.c,{i18nKey:"binomial-intro",ns:"LearnConfidenceCoverage"},"Now we will switch to asking a Yes/No question about a population. We are interested in estimating the true population proportion ",l.createElement(z.Z,{raw:"p"}),' of "Yes" answers (for example, what proportion of the population has blue eyes?).  We can take a sample of size ',l.createElement(z.Z,{raw:"n"}),', find how many observations in our sample are a "Yes" (X), and then estimate the true proportion ',l.createElement(z.Z,{raw:"p"})," with ",l.createElement(z.Z,{raw:"\\hat{p} = \\frac{X}{n}",elems:H}),". Then ",l.createElement(z.Z,{raw:"\\hat{p} \\sim \\text{Normal}\\left( p, \\sqrt{ \\tfrac{p(1-p)}{n} } \\right)",elems:H}),". Our confidence interval is then ",l.createElement(Y.Z,{tooltip:""+(this.state.useSampleProp?a("click-pop-proportion"):a("click-sample-proportion")),active:this.props.sampleStats,onChange:function(e){t.setState({useSampleProp:1===e})}},l.createElement(z.Z,{raw:"\\hat{p} \\pm Z_{"+(this.props.quartileNotation?"\\alpha/2":"\\text{critical}")+"} \\cdot \\sqrt{ \\frac{p(1-p)}{n}}",elems:H}),l.createElement(z.Z,{raw:"\\hat{p} \\pm Z_{"+(this.props.quartileNotation?"\\alpha/2":"\\text{critical}")+"} \\cdot \\sqrt{ \\frac{\\hat p(1-\\hat p)}{n}}",elems:H})),".")),l.createElement("p",null,l.createElement(p.c,{i18nKey:"binomial-intro-end",ns:"LearnConfidenceCoverage"},"For our choice of sample size (n), true proportion ",l.createElement(z.Z,{raw:"p"}),", and confidence level, we will simulate ",l.createElement(z.Z,{raw:"20"})," different samples from our normal distribution and calculate the corresponding sample proportions and confidence intervals."))),l.createElement(u.Z,{className:"coverage-card"},l.createElement(u.Z.Header,{as:"h4"},a("confidence-interval-coverage")),l.createElement(u.Z.Body,null,l.createElement(c.Z,null,l.createElement(d.Z,null,e),l.createElement(d.Z,null,l.createElement(m.Z,{md:5},l.createElement(P.Z,{title:a("change-parameters"),onGenerate:this.onGenerate,autoStart:!0,id:"confidence_coverage_binomial"},l.createElement(L.Z,{legend:a("sample-size")+" (n)",defaultValue:30,max:999,step:1}),l.createElement(L.Z,{legend:a("true-proportion")+" (p)",defaultValue:.5,max:1,min:0,step:.01}),l.createElement(G.Z,{legend:a("confidence-level"),defaultValue:.95,min:.01,max:.99,step:.01,fractionDigits:2})),l.createElement(A.Z,{id:"coverage-module-binomial"})),l.createElement(m.Z,{md:7},l.createElement(u.Z,null,l.createElement(u.Z.Header,{as:"h4"},a("confidence-intervals")),l.createElement(u.Z.Body,null,this.renderChart(),l.createElement("p",null,a("capture-true-proportion",{nTrapped:this.state.nTrapped})," ",l.createElement("b",null,"(",a("coverage"),": ",this.state.nTrapped/20,").")))))))))},t}(l.Component);K.defaultProps={intro:null,quartileNotation:!0,sampleStats:!0},K.propTypes={intro:i().oneOfType([i().node,i().string]),quartileNotation:i().bool,sampleStats:i().bool},t.default=(0,s.Z)("learn/confidence-coverage")(K)}}]);